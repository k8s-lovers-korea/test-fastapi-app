name: Build and Push Unified OCI Artifact

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push base Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: APush manifests as OCI artifact
      env:
        DEST: ghcr.io/${{ github.repository }}:latest
      run: |
        oras push "$DEST" \
          --artifact-type application/vnd.cncf.flux.config.v1+tar+gzip \
          --annotation "org.opencontainers.image.title=sampleapp-manifests" \
          --annotation "org.opencontainers.image.description=Kubernetes manifests for sampleapp (Deployment/Service)" \
          --annotation "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
          dist/app.tgz:application/vnd.cncf.flux.config.v1+tar+gzip